name: Client Pull Request CI & Automation

on:
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Check production build
        run: npm run build

  manage-project-card:
    name: Manage Project Card
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
    steps:
      - name: Get Linked Issue Number
        id: get-issue-number
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          issue_number=$(echo "$PR_BODY" | grep -oE "(Closes|Fixes|Resolves) #[0-9]+" | grep -oE "[0-9]+")
          if [ -n "$issue_number" ]; then
            echo "Found issue number: $issue_number"
            echo "issue_number=$issue_number" >> $GITHUB_OUTPUT
          else
            echo "No linked issue found in PR body."
          fi

      - name: Add or find issue on project and move to 'Review'
        if: steps.get-issue-number.outputs.issue_number
        env:
          GH_TOKEN: ${{ secrets.COLOPHON_PROJECT_ACTION }}
          PROJECT_NUMBER: 2
          ISSUE_NUMBER: ${{ steps.get-issue-number.outputs.issue_number }}
        run: |
          # Passo A: Adiciona a issue ao projeto. Se já estiver lá, ele apenas retorna o ID do item existente.
          item_id=$(gh project item-add ${{ env.PROJECT_NUMBER }} --owner "@me" --issue ${{ env.ISSUE_NUMBER }} --format json | jq -r '.id')

          if [ -z "$item_id" ]; then
            echo "Failed to add or find the issue in the project."
            exit 1
          fi
          echo "Found/Added project item with ID: $item_id"

          # Passo B: Edita o item (que agora temos certeza que existe) para definir o Status como "Review".
          gh project item-edit \
            --id "$item_id" \
            --project-id ${{ env.PROJECT_NUMBER }} \
            --field-name "Status" \
            --single-select-option-name "Review"

          echo "Successfully moved item to 'Review'."
